/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();     
        if(root == null) {
            return result;
        } 
         
        Queue<TreeNode> levelOrderQueue = new LinkedList<TreeNode>();
        levelOrderQueue.add(root);
        while(!levelOrderQueue.isEmpty()) {
            int queueSize = levelOrderQueue.size(); 
            List<Integer> subResult = new ArrayList<Integer>();
            for(int i = 0; i < queueSize; i++) {
                TreeNode queueTopElement = levelOrderQueue.remove();
                subResult.add(queueTopElement.val);
            
                if(queueTopElement.left != null) {
                    levelOrderQueue.add(queueTopElement.left);                  
                }
                if(queueTopElement.right != null) {
                    levelOrderQueue.add(queueTopElement.right);                     
                }             
            }
            result.add(subResult);
        }
        return result;
    }
}
