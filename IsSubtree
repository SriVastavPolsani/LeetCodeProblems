/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public bool IsSubtree(TreeNode s, TreeNode t) {
        if( s== null)
            return false;
        
        if(IsSubTreeFromCurr(s,t))
        {
            return true;
        }
        else
        {
            return IsSubtree(s.left, t) || IsSubtree(s.right, t) ;
        }
    }
    
    private bool IsSubTreeFromCurr(TreeNode s, TreeNode t)
    {
        if(s == null || t == null)
            return s == null && t == null;
        else if (s.val == t.val)
        {
            return IsSubTreeFromCurr(s.left, t.left) && IsSubTreeFromCurr(s.right, t.right);
        }
        else{
            return false;
        }
    }
}
