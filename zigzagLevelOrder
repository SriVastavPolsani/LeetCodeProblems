/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> output = new LinkedList<>();
        Queue<TreeNode> queue = new LinkedList<>();
        boolean zigzag = true;
        
        if(root == null){
            return output;
        }
        
        queue.add(root);
        
        while(!queue.isEmpty()){
            int size = queue.size();
            LinkedList<Integer> currList = new LinkedList<>();
            for(int i = 0; i < size; i++){
                TreeNode curr = queue.remove();
                if(curr.right != null){
                    queue.add(curr.right);
                }
                if(curr.left != null){
                    queue.add(curr.left);
                }
                if(!zigzag){
                    currList.add(curr.val);
                }
                else{
                    currList.addFirst(curr.val);
                }
            }
            output.add(currList);
            zigzag = !(zigzag);
        }
        return output;
    }
}
