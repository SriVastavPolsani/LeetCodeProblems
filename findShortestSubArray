class Solution {
    public int findShortestSubArray(int[] nums) {
        HashMap<Integer, Integer> numCounter = new HashMap<>();
        int degree = 0;
        
        HashMap<Integer, Integer> firstSeen = new HashMap<>();
        int minLength = Integer.MAX_VALUE;
        
        for(int i = 0; i < nums.length; i++){
            numCounter.put(nums[i], numCounter.getOrDefault(nums[i],0)+1);
            firstSeen.putIfAbsent(nums[i],i);
            if(numCounter.get(nums[i]) > degree){
                degree = numCounter.get(nums[i]);
                minLength = (i - firstSeen.get(nums[i]) + 1);
            }
            else if(numCounter.get(nums[i]) == degree){
                minLength = Math.min(i - firstSeen.get(nums[i]) + 1, minLength);
            }
        }
        return minLength;
    }
}
