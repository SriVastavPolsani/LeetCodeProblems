class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        int n = nums.length;
        Map<Integer, Integer> numCounter = new HashMap<>();
        List<Integer>[] bucket = new List[n+1];
        List<Integer> output = new ArrayList<>();
        
        for(int i = 0; i < nums.length; i++){
            numCounter.put(nums[i], numCounter.getOrDefault(nums[i], 0)+1);
        }
        
        for(int key : numCounter.keySet()){
            List<Integer> currList = bucket[numCounter.get(key)];
            if(currList == null){
                currList = new ArrayList<>();
            }
            currList.add(key);
            bucket[numCounter.get(key)] = currList;
        }
        
        for(int i = bucket.length-1; i >=0 && output.size() < k; i--){
            if(bucket[i] != null){
                output.addAll(bucket[i]);
            }
        }
        
        int[] outputArr = new int[output.size()];
        
        for(int i = output.size()-1; i >= 0; i--){
            outputArr[i] = output.get(i);
        }
        
        return outputArr;
    }
}
