class MinStack {
    Stack<Integer> newStack;
    Integer minElem;
    Stack<Integer> minStack;

    /** initialize your data structure here. */
    public MinStack() {
        newStack = new Stack<Integer>();
        minStack = new Stack<Integer>();
        minElem = Integer.MAX_VALUE;
    }
    
    public void push(int val) {
        newStack.push(val);
        if(val <= minElem) {
            minElem = val;
            minStack.push(val);
        }
    }
    
    public void pop() {
        int topValue = newStack.peek();
        if(topValue == minElem) {
            minStack.pop();
            if(!minStack.empty()) {
                minElem = minStack.peek(); 
            }
            else {
                minElem = Integer.MAX_VALUE;
            }
        }
        newStack.pop();
    }
    
    public int top() {
        return newStack.peek();
    }
    
    public int getMin() {
        return minElem;
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
