/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        return helper(0, 0, inorder.length-1, preorder, inorder);
    }
    
    public TreeNode helper(int preIndex, int inStartIndex, int inEndIndex, int[] preorder, int[] inorder) {
        if(inStartIndex > inEndIndex || preIndex > preorder.length - 1) {
            return null;
        }
        
        TreeNode root = new TreeNode(preorder[preIndex]);
        
        int inIndex = inStartIndex;
        
        for(int i = 0; i <= inEndIndex; i++) {
            if(inorder[i] == root.val) {
                inIndex = i;
            }
        }
        
        root.left = helper(preIndex + 1, inStartIndex, inIndex-1, preorder, inorder);
        root.right = helper(preIndex + (inIndex - inStartIndex) + 1 , inIndex+1, inEndIndex, preorder, inorder);
        
        return root;
    }
}
