public class Solution {
    public int ClimbStairs(int n) {
        
        //if(n >=3)
            //return ClimbStairs(n-1)+ClimbStairs(n-2); //Recursion failing when input >=43
        if(n==1)
            return 1;
        if(n==2)
          return 2;
        int [] dp = new int[n+1]; //Dynamic prog array
        
        //dp[0] = 1;
        dp[1] = 1; //predefine to use for rest of array
        dp[2] = 2;
        
        for(int i  = 3; i<=n ; i++)
        {
            dp[i] = dp[i-1] + dp[i-2]; // no of ways of reaching prev step + no of ways of reaching                                                        //step b4 prev
        }
        
        return dp[n];
    }
}
