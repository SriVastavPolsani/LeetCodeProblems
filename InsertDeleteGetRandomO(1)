public class RandomizedSet {
    Dictionary<int, int> randomSetDict;
    List<int> randomSetList;
    Random rand;

    /** Initialize your data structure here. */
    public RandomizedSet() {
        randomSetDict = new Dictionary<int, int>();
        randomSetList = new List<int>();
        rand = new Random();
    }
    
    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */
    public bool Insert(int val) {
        if(randomSetDict.ContainsKey(val))
            return false;
        else
        {
            randomSetDict.Add(val, randomSetList.Count);
            randomSetList.Add(val);
            return true;
        }
    }
    
    /** Removes a value from the set. Returns true if the set contained the specified element. */
    public bool Remove(int val) {
        if(!randomSetDict.ContainsKey(val))
            return false;
        
        else
        {        
            int idx = randomSetDict[val];
            int lastElement = randomSetList[randomSetList.Count - 1];        
            
            randomSetDict[lastElement] = idx;
            randomSetList[idx] = lastElement;
               
            randomSetDict.Remove(val);
            randomSetList.RemoveAt(randomSetList.Count - 1);
            
            return true;
        }        
    }
    
    /** Get a random element from the set. */
    public int GetRandom() {
        return randomSetList[rand.Next(0,randomSetList.Count)];
    }
}

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet obj = new RandomizedSet();
 * bool param_1 = obj.Insert(val);
 * bool param_2 = obj.Remove(val);
 * int param_3 = obj.GetRandom();
 */
