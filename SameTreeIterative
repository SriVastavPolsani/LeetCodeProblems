/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        if(p == null && q == null){
            return true;
        }
        
        if(p == null || q == null){
            return false;
        }
        
        Queue<TreeNode> queue = new LinkedList<>();
        
        queue.offer(p);
        queue.offer(q);
        
        while(!queue.isEmpty()){
            TreeNode pNode = queue.poll();
            TreeNode qNode = queue.poll();
            
            if(pNode == null && qNode == null){
                continue;
            }

            if(pNode == null || qNode == null){
                return false;
            }
            
            if(pNode.val != qNode.val){
                return false;
            }
            
            queue.offer(pNode.left);
            queue.offer(qNode.left);   
            
            queue.offer(pNode.right);
            queue.offer(qNode.right);    
        }
        return true;
    }
}
