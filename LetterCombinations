public class Solution {
    public IList<string> LetterCombinations(string digits) {
        IList<string> result = new List<string>();
        if(digits.Length == 0 || digits == "" )
            return result;
        
        string[] mapping ={
            "0",
            "1",
            "abc",
            "def",
            "ghi",
            "jkl",
            "mno",
            "pqrs",
            "tuv",
            "wxyz"
        };
        
        letterCombinationsRecursive(result, digits, "", 0, mapping);
        return result;
    }
    
    private void letterCombinationsRecursive(IList<string> result, string digits, string current, int index, string[] mapping)
    {
        if(index == digits.Length)
        {
            result.Add(current);
            return;
        }
        
        string letters = mapping[digits[index] - '0'];
        for(int i = 0; i < letters.Length; i++)
            letterCombinationsRecursive(result, digits, current + letters[i], index+1, mapping);
    }
}
